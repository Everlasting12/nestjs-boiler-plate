generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement())
  userId         String     @unique @default(uuid())
  email          String     @unique
  name           String
  password       String
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  isActive       Boolean    @default(true)
  firebaseTokens String[]
  profilePic     String?
  lastLogin      DateTime?
  userRole       UserRole[]
}

model Notification {
  id             Int      @id @default(autoincrement())
  notificationId String   @unique @default(uuid())
  recipient      String
  templateName   String
  createdAt      DateTime @default(now())
  userId         String?
  body           Json
  message        String?
  success        Boolean
}

model NotificationTemplate {
  id          Int      @id @default(autoincrement())
  templateId  String   @unique @default(uuid())
  name        String   @unique
  channelType Json
  channels    Json
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model UserRole {
  id                 Int      @id @default(autoincrement())
  roleId             String
  permissionEntities Json
  userId             String
  isDefault          Boolean  @default(true)
  isActive           Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  role Role @relation(fields: [roleId], references: [roleId])
  user User @relation(fields: [userId], references: [userId])
}

model Role {
  id                 Int      @id @default(autoincrement())
  roleId             String   @unique
  name               String
  permissionIds      String[]
  permissionEntities Json
  isDefault          Boolean  @default(true)
  isActive           Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  userRole UserRole[]
}

model Permission {
  id                 Int      @id @default(autoincrement())
  name               String   @unique
  apiScopes          String[]
  feScopes           String[]
  permissionEntities Json
  isDefault          Boolean  @default(true)
  isActive           Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model Configuration {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  value    Json
  isActive Boolean @default(true)
}
